// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// см. бф_ФабрикаХТТП.ТипыПараметровЗапроса
Функция ТипыПараметровЗапроса() Экспорт
	Результат = Новый Структура();
	Результат.Вставить("Строка", "СТРОКА");
	Результат.Вставить("Булево", "БУЛЕВО");
	Результат.Вставить("Число", "ЧИСЛО");
	Результат.Вставить("Дата", "ДАТА");
	Результат.Вставить("ДатаВремя", "ДАТА_ВРЕМЯ");
	Результат.Вставить("Гуид", "ИД");
	Возврат Новый ФиксированнаяСтруктура(Результат);
КонецФункции

// см. бф_ФабрикаХТТП.ПолнаяФабрикаТиповПараметровЗапроса
Функция ПолнаяФабрикаТиповПараметровЗапроса() Экспорт
	
	ФабрикаТиповПараметров = Новый Массив(); // Массив из Структура
	ФабрикаТиповПараметров.Добавить(бф_ФабрикаХТТП.ТипыПараметровЗапроса());
	
	бф_ФабрикаХТТППереопределяемый.ПриОпределенииСоставаТиповПараметровЗапроса(ФабрикаТиповПараметров);
	
	Результат = Новый Структура();
	
	Для Каждого Фабрика Из ФабрикаТиповПараметров Цикл
		ДополнитьСтруктуру(Результат, Фабрика, Истина);
	КонецЦикла;
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции

Функция КодыТиповОшибок() Экспорт
	Результат = Новый Структура();
	Результат.Вставить("ОшибкаВалидации", "VALIDATION_ERROR");
	Результат.Вставить("ОшибкаДоступа", "ACCESS_ERROR");
	Результат.Вставить("ОшибкаСервера", "INTERNAL_SERVER_ERROR");
	
	бф_ФабрикаХТТППереопределяемый.ПриОпределенииКодовТиповОшибок(Результат);
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
КонецФункции

#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныеПроцедурыИФункции

// Дополнить структуру.
// 
// Параметры:
//  Приемник - Структура
//  Источник - Структура
//  Заменять - Булево,Неопределено
Процедура ДополнитьСтруктуру(Приемник, Источник, Заменять = Неопределено) Экспорт
	
	Для Каждого Элемент Из Источник Цикл
		Если Заменять <> Истина И Приемник.Свойство(Элемент.Ключ) Тогда
			Если Заменять = Ложь Тогда
				Продолжить;
			Иначе
				ВызватьИсключение СтрШаблон(
					НСтр("ru = 'Пересечение ключей источника и приемника: ""%1"".';
					|en = 'The source and destination have identical keys: ""%1"".'"),
					Элемент.Ключ
				);
			КонецЕсли;
		КонецЕсли;
		Приемник.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
