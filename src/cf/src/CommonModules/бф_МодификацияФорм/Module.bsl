//@skip-check method-too-many-params

#Область ПрограммныйИнтерфейс

Функция ДобавитьПолеВвода(Форма, Родитель = Неопределено, Имя, ПутьКДанным, Заголовок = "") Экспорт
	
	Возврат ДобавитьПолеФормы(Форма, Родитель, Имя, ПутьКДанным, Заголовок, ВидПоляФормы.ПолеВвода);
	
КонецФункции

Функция ДобавитьПолеНадписи(Форма, Родитель = Неопределено, Имя, ПутьКДанным, Заголовок = "") Экспорт
	
	Возврат ДобавитьПолеФормы(Форма, Родитель, Имя, ПутьКДанным, Заголовок, ВидПоляФормы.ПолеНадписи);
	
КонецФункции

Функция ДобавитьПолеФлажка(Форма, Родитель = Неопределено, Имя, ПутьКДанным, Заголовок = "") Экспорт
	
	Возврат ДобавитьПолеФормы(Форма, Родитель, Имя, ПутьКДанным, Заголовок, ВидПоляФормы.ПолеФлажка);
	
КонецФункции

Функция ДобавитьПолеФормы(Форма, Родитель = Неопределено, Имя, ПутьКДанным, Заголовок = "", Вид = Неопределено) Экспорт
	
	Поле = Форма.Элементы.Добавить(Имя, Тип("ПолеФормы"), Родитель);
	
	Поле.ПутьКДанным = ПутьКДанным;
	
	Если Вид = Неопределено Тогда
		Поле.Вид = ВидПоляФормы.ПолеВвода;
	Иначе
		Поле.Вид = Вид;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Поле.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Поле;
	
КонецФункции

Функция ДобавитьГруппуОбычную(Форма, Родитель = Неопределено, Имя, Заголовок = "", ЭлементПередКоторымВставить=Неопределено) Экспорт
	
	Возврат ДобавитьГруппуФормы(Форма, Родитель, Имя, Заголовок, ВидГруппыФормы.ОбычнаяГруппа,ЭлементПередКоторымВставить);
	
КонецФункции

Функция ДобавитьГруппуСтраница(Форма, Родитель = Неопределено, Имя, Заголовок = "") Экспорт
	
	Возврат ДобавитьГруппуФормы(Форма, Родитель, Имя, Заголовок, ВидГруппыФормы.Страница);
	
КонецФункции

Функция ДобавитьГруппуФормы(Форма, Родитель = Неопределено, Имя, Заголовок = "", Вид, ЭлементПередКоторымВставить=Неопределено) Экспорт
	
	Если ЭлементПередКоторымВставить = Неопределено Тогда
		Группа = Форма.Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Иначе
		Группа = Форма.Элементы.Вставить(Имя, Тип("ГруппаФормы"), Родитель, ЭлементПередКоторымВставить);
	КонецЕсли;
	
	Группа.Вид = Вид;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Группа.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Группа;
	
КонецФункции

Функция ДобавитьТаблицу(Форма, Родитель = Неопределено, Имя, ПутьКДанным, Заголовок = "", Элемент = Неопределено) Экспорт
	
	Таблица = Форма.Элементы.Вставить(Имя, Тип("ТаблицаФормы"), Родитель, Элемент); 
	Таблица.ПутьКДанным = ПутьКДанным;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Таблица.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура ДобавитьПоляВводаТаблицы(Форма, ТаблицаФормы, ИменаКолонокИсключения = "") Экспорт
	
	ТаблицаЗначений = Форма.РеквизитФормыВЗначение(ТаблицаФормы.ПутьКДанным);
	
	Если Не ТипЗнч(ТаблицаЗначений) = Тип("ТаблицаЗначений") Тогда
		ТаблицаЗначений = ТаблицаЗначений.Выгрузить();
	КонецЕсли;
		
	МассивИменКолонокИсключения = СтрРазделить(ИменаКолонокИсключения, ", ", Ложь);
	МассивИменКолонокИсключения.Добавить("ИсходныйНомерСтроки");
	
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		
		Если МассивИменКолонокИсключения.Найти(Колонка.Имя) = Неопределено Тогда
			
			ДобавитьПолеВводаТаблицы(Форма, ТаблицаФормы, Колонка.Имя);
						
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

функция ДобавитьПолеВводаТаблицы(Форма, ТаблицаФормы, Имя) Экспорт
	
	ИмяПоля = ТаблицаФормы.Имя + Имя;
	ПутьКДанным = ТаблицаФормы.ПутьКДанным + "." + Имя;
	
	Возврат ДобавитьПолеВвода(Форма, ТаблицаФормы, ИмяПоля, ПутьКДанным);
	
КонецФункции

Функция ВставитьКомандуИКнопку(Форма, Родитель = Неопределено, Имя, Заголовок = "", Картинка = Неопределено, Отображение = Неопределено, ВидКнопки = Неопределено, ИзменяетСохраняемыеДанные = Ложь, Элемент) Экспорт
	
	Команда = ДобавитьКоманду(Форма, Имя, Заголовок, Картинка, Отображение, ИзменяетСохраняемыеДанные);
	Кнопка = ВставитьКнопку(Форма, Родитель, Команда.Имя, Команда.Имя, , ВидКнопки, Элемент);
	
	Возврат Кнопка;
	
КонецФункции

Функция ДобавитьКомандуИКнопку(Форма, Родитель = Неопределено, Имя, Заголовок = "", Картинка = Неопределено, Отображение = Неопределено, ВидКнопки = Неопределено, ИзменяетСохраняемыеДанные = Ложь) Экспорт
	
	Команда = ДобавитьКоманду(Форма, Имя, Заголовок, Картинка, Отображение, ИзменяетСохраняемыеДанные);
	Кнопка = ДобавитьКнопку(Форма, Родитель, Команда.Имя, Команда.Имя, , ВидКнопки);
	
	Возврат Кнопка;
	
КонецФункции

Функция ДобавитьКоманду(Форма, Имя, Заголовок = "", Картинка = Неопределено, Отображение = Неопределено, ИзменяетСохраняемыеДанные = Ложь) Экспорт
	
	Команда = Форма.Команды.Добавить(Имя);
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Команда.Заголовок = Заголовок;
	КонецЕсли;
	Команда.Действие = Команда.Имя;
	
	Если Не Картинка = Неопределено Тогда
		Команда.Картинка = Картинка;
	КонецЕсли;
	
	Если Отображение = Неопределено Тогда
		Команда.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Иначе
		Команда.Отображение = Отображение;
	КонецЕсли;

	Команда.ИзменяетСохраняемыеДанные = ИзменяетСохраняемыеДанные;
	
	Возврат Команда;
	
КонецФункции

Функция ДобавитьКнопку(Форма, Родитель = Неопределено, Имя, ИмяКоманды, Заголовок = "", ВидКнопки = Неопределено) Экспорт
	
	Кнопка = Форма.Элементы.Добавить(Имя, Тип("КнопкаФормы"), Родитель);
	
	Если ВидКнопки = Неопределено Тогда
		Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	Иначе
		Кнопка.Вид = ВидКнопки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Кнопка.Заголовок = Заголовок;
	КонецЕсли;
	
	Кнопка.ИмяКоманды = ИмяКоманды;
	
	Возврат Кнопка;
	
КонецФункции

Функция ВставитьКнопку(Форма, Родитель = Неопределено, Имя, ИмяКоманды, Заголовок = "", ВидКнопки = Неопределено, Элемент) Экспорт
	
	Кнопка = Форма.Элементы.Вставить(Имя, Тип("КнопкаФормы"), Родитель, Элемент);
	
	Если ВидКнопки = Неопределено Тогда
		Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	Иначе
		Кнопка.Вид = ВидКнопки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Кнопка.Заголовок = Заголовок;
	КонецЕсли;
	
	Кнопка.ИмяКоманды = ИмяКоманды;
	
	Возврат Кнопка;
	
КонецФункции

Функция ДобавитьДекорациюФормы(Форма, Родитель = Неопределено, Имя, Заголовок = "", Вид = Неопределено) Экспорт
	
	
	Поле = Форма.Элементы.Добавить(Имя, Тип("ДекорацияФормы"), Родитель);
		
	Если Вид = Неопределено Тогда
		Поле.Вид = ВидДекорацииФормы.Надпись;
	Иначе
		Поле.Вид = Вид;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Поле.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Поле;
	
КонецФункции

Функция ВставитьПолеФормы(Форма, Родитель = Неопределено, Имя, ПутьКДанным, Заголовок = "", Вид = Неопределено, Элемент, ПодогнатьПоШирине = Ложь, ПодогнатьПоВысоте = Ложь) Экспорт
		
	Поле = Форма.Элементы.Вставить(Имя, Тип("ПолеФормы"), Родитель, Элемент);
		
	Поле.ПутьКДанным = ПутьКДанным;
	
	Если Вид = Неопределено Тогда
		Поле.Вид = ВидПоляФормы.ПолеВвода;
	Иначе
		Поле.Вид = Вид;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Поле.Заголовок = Заголовок;
	КонецЕсли;
	
	Если ПодогнатьПоШирине Тогда
		Поле.РастягиватьПоГоризонтали = Элемент.РастягиватьПоГоризонтали;
		Поле.Ширина = Элемент.Ширина;
	КонецЕсли;
	
	Если ПодогнатьПоВысоте Тогда
		Поле.РастягиватьПоГоризонтали = Элемент.РастягиватьПоВертикали;
		Поле.Высота = Элемент.Высота;
	КонецЕсли;
	
	Возврат Поле;
	
КонецФункции

Функция ВставитьДекорациюФормы(Форма, Родитель = Неопределено, Имя, Заголовок = "", Вид = Неопределено, Элемент) Экспорт
	
	
	Поле = Форма.Элементы.Вставить(Имя, Тип("ДекорацияФормы"), Родитель, Элемент);
		
	Если Вид = Неопределено Тогда
		Поле.Вид = ВидДекорацииФормы.Надпись;
	Иначе
		Поле.Вид = Вид;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Поле.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Поле;
	
КонецФункции

Функция ДобавитьПереопределяемуюКоманду(Форма, Имя, Заголовок = "", Картинка = Неопределено, Отображение = Неопределено, ИзменяетСохраняемыеДанные = Ложь) Экспорт
	
	Команда = Форма.Команды.Добавить(Имя);
	
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Команда.Заголовок = Заголовок;
	КонецЕсли;
	Команда.Действие = "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	
	Если Не Картинка = Неопределено Тогда
		Команда.Картинка = Картинка;
	КонецЕсли;
	
	Если Отображение = Неопределено Тогда
		Команда.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Иначе
		Команда.Отображение = Отображение;
	КонецЕсли;
	
	Команда.ИзменяетСохраняемыеДанные = ИзменяетСохраняемыеДанные;
	
	Возврат Команда;
	
КонецФункции

Функция ДобавитьПереопределяемуюКомандуИКнопку(Форма, Родитель = Неопределено, Имя, Заголовок = "", Картинка = Неопределено, Отображение = Неопределено, ВидКнопки = Неопределено, ИзменяетСохраняемыеДанные = Ложь) Экспорт
	
	Команда = ДобавитьПереопределяемуюКоманду(Форма, Имя, Заголовок, Картинка, Отображение, ИзменяетСохраняемыеДанные);
	Кнопка = ДобавитьКнопку(Форма, Родитель, Команда.Имя, Команда.Имя, , ВидКнопки);
	
	Возврат Кнопка;
	
КонецФункции

Функция ВставитьПереопределяемуюКомандуИКнопку(Форма, Родитель = Неопределено, Имя, Заголовок = "", Картинка = Неопределено, Отображение = Неопределено, ВидКнопки = Неопределено, ИзменяетСохраняемыеДанные = Ложь, Элемент) Экспорт
	
	Команда = ДобавитьПереопределяемуюКоманду(Форма, Имя, Заголовок, Картинка, Отображение, ИзменяетСохраняемыеДанные);
	Кнопка = ВставитьКнопку(Форма, Родитель, Команда.Имя, Команда.Имя, , ВидКнопки, Элемент);
	
	Возврат Кнопка;
	
КонецФункции

//Параметры:
// Форма - ФормаКлиентскогоПриложения - управляемая форма для обработки;
// СтруктураЗаменыЗаголовков - структура из КлючИЗначение - имя элемента формы, Значение - новый заголовок элемента;
Процедура ЗаменитьЗаголовкиЭлементовФормы(Форма, СтруктураЗаменыЗаголовков) Экспорт 
	
	Элементы = Форма.Элементы;
	
	Для Каждого ЭлементИЗаголовок Из СтруктураЗаменыЗаголовков Цикл 
		ЭлементФормы = Элементы.Найти(ЭлементИЗаголовок.Ключ);
		Если ЭлементФормы <> Неопределено Тогда 
			ЭлементФормы.Заголовок = ЭлементИЗаголовок.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
