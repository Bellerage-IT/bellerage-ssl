//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2022 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 
#Область ПрограммныйИнтерфейс

#КонецОбласти

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции для служебного использования внутри подсистемы
///////////////////////////////////////////////////////////////////////////////// 

#Область СлужебныйПрограммныйИнтерфейс

// РасширенияКонфигурации
//  Возвращает список имен установленных расширений
// Возвращаемое значение:
//  Массив - Расширения конфигурации
Функция РасширенияКонфигурации() Экспорт
	
	Расширения = РасширенияКонфигурации.Получить();
	
	Возврат ЮТОбщий.ВыгрузитьЗначения(Расширения, "Имя");
	
КонецФункции

// МодулиРасширений
// Выполняет чтение метаданных общих модулей, которые предположительно могут являться тестами
// 
// Возвращаемое значение:
//  Массив из см. ЮТФабрика.ОписаниеМодуля - Коллекция описаний моделей, структуру элемента см. ЮТФабрика.ОписаниеМодуля
Функция МодулиРасширений() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МетаданныеМодулей = Новый Массив;
	
	Для Каждого Модуль Из Метаданные.ОбщиеМодули Цикл
		
		Если Модуль.РасширениеКонфигурации() <> Неопределено Тогда
			
			МетаданныеМодуля = МетаданныеМодуля(Модуль);
			МетаданныеМодулей.Добавить(МетаданныеМодуля);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МетаданныеМодулей;
	
КонецФункции

// Модули подсистемы.
//  Возвращает список модулей подсистемы
//  Подсистема должна находится в подсистеме "ЮТФункциональность"
// Параметры:
//  ИмяПодсистемы - Строка - Имя подсистемы
// 
// Возвращаемое значение:
//  Массив из Строка - Имена модулей входящих в подсистему
Функция МодулиПодсистемы(ИмяПодсистемы) Экспорт
	
	Подсистема = Метаданные.Подсистемы.ЮТФункциональность.Подсистемы.Найти(ИмяПодсистемы);
	
	Если Подсистема = Неопределено Тогда
		
		ВызватьИсключение СтрШаблон("Подсистема ""%1"" не найдена", ИмяПодсистемы);
		
	КонецЕсли;
	
	Модули = Новый Массив();
	
	Для Каждого Объект Из Подсистема.Состав Цикл
		
		Если Метаданные.ОбщиеМодули.Содержит(Объект) Тогда
			
			Модули.Добавить(Объект.Имя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Модули;
	
КонецФункции

// МетаданныеМодуля
// Создает описание метаданных модуля
// 
// Параметры:
//  Модуль - ОбъектМетаданныхОбщийМодуль, Структура, Строка - Общий модуль либо структура с аналогичными атрибутами или имя модуля
// 
// Возвращаемое значение:
//  Структура - см. ЮТФабрика.ОписаниеМодуля
Функция МетаданныеМодуля(Знач Модуль) Экспорт
	
	Если ТипЗнч(Модуль) = Тип("Строка") Тогда
		ИмяМодуля = Модуль;
		Модуль = Метаданные.ОбщиеМодули.Найти(ИмяМодуля);
		
		Если Модуль = Неопределено Тогда
			ВызватьИсключение "Не найден модуль с именем " + ИмяМодуля;
		КонецЕсли;
	КонецЕсли;
	
	Описание = ЮТФабрика.ОписаниеМодуля();
	Описание.Имя = Модуль.Имя;
	Описание.КлиентУправляемоеПриложение = Модуль.КлиентУправляемоеПриложение;
	Описание.КлиентОбычноеПриложение = Модуль.КлиентОбычноеПриложение;
	Описание.Сервер = Модуль.Сервер;
	Описание.ВызовСервера = Модуль.ВызовСервера;
	Описание.Расширение = Модуль.РасширениеКонфигурации().Имя;
	Описание.ПолноеИмя = СтрШаблон("%1.%2", Описание.Расширение, Модуль.Имя);
	
	Возврат Описание;
	
КонецФункции

#КонецОбласти

/////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции, составляющие внутреннюю реализацию модуля 
///////////////////////////////////////////////////////////////////////////////// 

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
