/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТестовыйНабор("Добавление пагинации к запросу с неккоретными параметрами")
			.ДобавитьТест("ПагинацияСОшибочнымиПараметрами").СПараметрами(0, 1)
			.ДобавитьТест("ПагинацияСОшибочнымиПараметрами").СПараметрами(0, "123")
			.ДобавитьТест("ПагинацияСОшибочнымиПараметрами").СПараметрами("123", "123")
		.ДобавитьТест("ПагинацияСНесколькимиОператорами")
		.ДобавитьТест("ПагинацияСОднимОператоромВыбрать", "Запрос без ВТ")
			.СПараметрами(ТекстЗапросаДляПроверкиПагинацииБезВыбораВТ()).ВТранзакции()
		.ДобавитьТест("ПагинацияСОднимОператоромВыбрать", "Запрос с выбором из внешней ВТ")
			.СПараметрами(ТекстЗапросаДляПроверкиПагинацииСВыборомИзВТ()).ВТранзакции()		
		.ДобавитьТест("ПагинацияСОднимОператоромВыбрать", "Запрос с созданием и выбором из ВТ")
			.СПараметрами(ТекстЗапросаДляПроверкиПагинацииССозданиемИВыборомИзВТ()).ВТранзакции()		
	;
		
КонецПроцедуры

#Область События

Процедура ПередВсемиТестами() Экспорт
	
КонецПроцедуры

Процедура ПередКаждымТестом() Экспорт
	
КонецПроцедуры

Процедура ПослеКаждогоТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеВсехТестов() Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ПагинацияСОшибочнымиПараметрами(Порция, Сдвиг) Экспорт
	
	ТекстЗапроса = ТекстЗапросаДляПроверкиПагинацииБезВыбораВТ();
	
	НовыйТекстЗапроса = ТекстЗапроса;
	ЮТест.ОжидаетЧто(бф_Пагинация).Метод(
		"ДобавитьПагинацию",
		ЮТОбщий.ЗначениеВМассиве(НовыйТекстЗапроса, Порция, Сдвиг)
	).ВыбрасываетИсключение("Недопустимые значения параметров");
	
КонецПроцедуры

Процедура ПагинацияСОднимОператоромВыбрать(ТекстЗапросДляПроверки) Экспорт
	
	РАЗМЕР_ПОРЦИИ = 10;
	СДВИГ = 20;
	
	Справочник = Справочники.тест_Справочник.СоздатьЭлемент(); 
	Справочник.Наименование = "Тестовый справочник";
	Справочник.Записать();

	// Очистим РС в транзакции
	Набор = РегистрыСведений.тест_РегистрДляПагинации.СоздатьНаборЗаписей();	
	// Добавление данных в регистр
	Для Итератор = 1 По 104 Цикл
		Запись = Набор.Добавить();
		Запись.Ключ = Итератор;
		Запись.Значение = Итератор;
		Запись.Период = НачалоДня(ТекущаяДатаСеанса()) + Итератор;
		Запись.Справочник = Справочник.Ссылка;
		Запись.ДатаУстановки = ТекущаяДатаСеанса();

	КонецЦикла;
	Набор.Записать();
	
	Запрос = Новый Запрос();
	ЗаполнитьШаблонВТ(Запрос);
	Запрос.УстановитьПараметр("Период", ДобавитьМесяц(ТекущаяДата(), -1));
	
	// Без сдвига
	НовыйТекстЗапроса = ТекстЗапросДляПроверки;
	бф_Пагинация.ДобавитьПагинацию(НовыйТекстЗапроса, 10, 0);
	Запрос.Текст = НовыйТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();

	ЮТест.ОжидаетЧто(Результат).ИмеетДлину(10);
	
	// Со сдвигом	
	Запрос = Новый Запрос();
	ЗаполнитьШаблонВТ(Запрос);
	Запрос.УстановитьПараметр("Период", ДобавитьМесяц(ТекущаяДата(), -1));
	НовыйТекстЗапроса = ТекстЗапросДляПроверки;
	бф_Пагинация.ДобавитьПагинацию(НовыйТекстЗапроса, РАЗМЕР_ПОРЦИИ, СДВИГ);
	Запрос.Текст = НовыйТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();
	
	ЮТест.ОжидаетЧто(Результат)
		.ИмеетДлину(10);
	
	ЮТест.ОжидаетЧто(Результат[0])
			.Свойство("Значение").Равно(21);
	
	ЮТест.ОжидаетЧто(Результат[9])
			.Свойство("Значение").Равно(30);
	
КонецПроцедуры

Процедура ПагинацияСНесколькимиОператорами() Экспорт
	
	ТекстЗапроса = ТекстЗапросаДляПроверкиИсключенияПагинации();
	
	НовыйТекстЗапроса = ТекстЗапроса;
	ЮТест.ОжидаетЧто(бф_Пагинация).Метод(
		"ДобавитьПагинацию",
		ЮТОбщий.ЗначениеВМассиве(НовыйТекстЗапроса, 10, 10)
	).ВыбрасываетИсключение("В пакете запроса несколько операторов выбрать");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


// Заполнить шаблон ВТ.
// 
// Параметры:
//  Запрос - Запрос
// 
Процедура ЗаполнитьШаблонВТ(Запрос)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВТ_ЗначенияКонстант.Период КАК Период,
	|	ВТ_ЗначенияКонстант.Ключ КАК Ключ,
	|	ВТ_ЗначенияКонстант.Значение КАК Значение,
	|	ВТ_ЗначенияКонстант.ДатаУстановки КАК ДатаУстановки,
	|	ВТ_ЗначенияКонстант.Автор КАК Автор,
	|	ВТ_ЗначенияКонстант.Справочник
	|ПОМЕСТИТЬ ВТ_ИзДругогоМенеджераВТ
	|ИЗ
	|	РегистрСведений.тест_РегистрДляПагинации КАК ВТ_ЗначенияКонстант";
	Запрос.Выполнить()
КонецПроцедуры 

Функция ТекстЗапросаДляПроверкиПагинацииСВыборомИзВТ() Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПереименованнаяВТ.Период КАК Период,
	|	ПереименованнаяВТ.Ключ КАК Ключ,
	|	ПереименованнаяВТ.Значение КАК Значение,
	|	ПраваяТаблица.Автор,
	|	ПраваяТаблица.ДатаУстановки,
	|	ПраваяТаблица.Справочник,
	|	ПраваяТаблица.Справочник.Представление
	|ИЗ
	|	ВТ_ИзДругогоМенеджераВТ КАК ПереименованнаяВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.тест_РегистрДляПагинации КАК ПраваяТаблица
	|		ПО ПереименованнаяВТ.Ключ = ПраваяТаблица.Ключ
	|		И ПереименованнаяВТ.Период = ПраваяТаблица.Период
	|ГДЕ
	|	ИСТИНА
	|	И ПраваяТаблица.Период > &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаДляПроверкиПагинацииССозданиемИВыборомИзВТ() Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	бф_ЗначенияКонстант.Период КАК Период,
	|	бф_ЗначенияКонстант.Ключ КАК Ключ,
	|	бф_ЗначенияКонстант.Значение КАК Значение,
	|	бф_ЗначенияКонстант.ДатаУстановки КАК ДатаУстановки,
	|	бф_ЗначенияКонстант.Автор КАК Автор,
	|	бф_ЗначенияКонстант.Справочник КАК Справочник
	|ПОМЕСТИТЬ ВТ_ЗначенияКонстантНовый
	|ИЗ
	|	РегистрСведений.тест_РегистрДляПагинации КАК бф_ЗначенияКонстант
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереименованнаяВТ.Период КАК Период,
	|	ПереименованнаяВТ.Ключ КАК Ключ,
	|	ПереименованнаяВТ.Значение КАК Значение,
	|	ПраваяТаблица.Автор,
	|	ПраваяТаблица.ДатаУстановки,
	|	ПереименованнаяВТ.Справочник.Представление
	|ИЗ
	|	ВТ_ЗначенияКонстантНовый КАК ПереименованнаяВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.тест_РегистрДляПагинации КАК ПраваяТаблица
	|		ПО ПереименованнаяВТ.Ключ = ПраваяТаблица.Ключ
	|		И ПереименованнаяВТ.Период = ПраваяТаблица.Период
	|ГДЕ
	|	ИСТИНА
	|	И ПраваяТаблица.Период > &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаДляПроверкиПагинацииБезВыбораВТ()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ИзДругогоМенеджераВТ.Период,
	|	ВТ_ИзДругогоМенеджераВТ.Ключ
	|ПОМЕСТИТЬ ВТ_ДругаяШаблоннаяВТ
	|ИЗ
	|	ВТ_ИзДругогоМенеджераВТ КАК ВТ_ИзДругогоМенеджераВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Поле1,
	|	2 КАК Поле2,
	|	3 КАК Поле3
	|ПОМЕСТИТЬ ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица1.Период,
	|	Таблица1.Ключ КАК Ключ,
	|	Таблица2.Значение,
	|	Таблица2.ДатаУстановки КАК ДатаУстановки,
	|	Таблица2.Автор,
	|	Таблица2.Справочник,
	|	Таблица2.Справочник.Представление
	|ИЗ
	|	РегистрСведений.тест_РегистрДляПагинации КАК Таблица1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.тест_РегистрДляПагинации КАК Таблица2
	|		ПО Таблица1.Период = Таблица2.Период
	|		И Таблица1.Ключ = Таблица2.Ключ
	|ГДЕ
	|	ИСТИНА
	|	И Таблица1.Период > &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица1.Период,
	|	Ключ";
	Возврат ТекстЗапроса
КонецФункции

Функция ТекстЗапросаДляПроверкиИсключенияПагинации()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	бф_ЗначенияКонстант.Период,
	|	бф_ЗначенияКонстант.Ключ,
	|	бф_ЗначенияКонстант.Значение,
	|	бф_ЗначенияКонстант.ДатаУстановки КАК ДатаУстановки,
	|	бф_ЗначенияКонстант.Автор
	|ИЗ
	|	РегистрСведений.тест_РегистрДляПагинации КАК бф_ЗначенияКонстант
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бф_ЗначенияКонстант.Период,
	|	бф_ЗначенияКонстант.Ключ,
	|	бф_ЗначенияКонстант.Значение,
	|	бф_ЗначенияКонстант.ДатаУстановки,
	|	бф_ЗначенияКонстант.Автор
	|ИЗ
	|	РегистрСведений.тест_РегистрДляПагинации КАК бф_ЗначенияКонстант
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Возврат ТекстЗапроса
КонецФункции

#КонецОбласти
