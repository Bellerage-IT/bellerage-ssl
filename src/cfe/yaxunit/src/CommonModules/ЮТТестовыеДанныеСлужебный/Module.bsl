//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// Фикция.
// 
// Параметры:
//  ОписаниеТипа - ОписаниеТипов
// 
// Возвращаемое значение:
//  Произвольный
Функция Фикция(ОписаниеТипа) Экспорт
	
	Если ОписаниеТипа.Типы().Количество() > 1 Тогда
		НомерТипа = ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(ОписаниеТипа.Типы().Количество());
		Тип = ОписаниеТипа.Типы()[НомерТипа - 1];
	Иначе
		Тип = ОписаниеТипа.Типы()[0];
	КонецЕсли;
	
	Значение = Неопределено;
	
	Если Тип = Тип("Число") Тогда
		
		МаксимальноеЗначение = 4294967295;
		Если ОписаниеТипа.КвалификаторыЧисла.ДопустимыйЗнак = ДопустимыйЗнак.Неотрицательный ИЛИ ЮТТестовыеДанные.СлучайноеБулево() Тогда
			МаксимальноеЗначение = ОписаниеТипа.ПривестиЗначение(МаксимальноеЗначение);
			Значение = ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(МаксимальноеЗначение, ОписаниеТипа.КвалификаторыЧисла.РазрядностьДробнойЧасти);
		Иначе
			МаксимальноеЗначение = ОписаниеТипа.ПривестиЗначение(-МаксимальноеЗначение);
			Значение = ЮТТестовыеДанные.СлучайноеОтрицательноеЧисло(МаксимальноеЗначение, ОписаниеТипа.КвалификаторыЧисла.РазрядностьДробнойЧасти);
		КонецЕсли;
		
	ИначеЕсли Тип = Тип("Строка") Тогда
		
		Если ОписаниеТипа.КвалификаторыСтроки.Длина = 0 Тогда
			Значение = ЮТТестовыеДанные.СлучайнаяСтрока(ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(100));
		Иначе
			Значение = ЮТТестовыеДанные.СлучайнаяСтрока(ОписаниеТипа.КвалификаторыСтроки.Длина);
		КонецЕсли;
		
	ИначеЕсли Тип = Тип("Дата") Тогда
		
		Значение = ЮТТестовыеДанные.СлучайнаяДата(ТекущаяДата() - 315360000, ТекущаяДата() + 315360000); // +/- 10 лет
		
	ИначеЕсли Тип = Тип("Булево") Тогда
		
		Значение = ЮТТестовыеДанные.СлучайноеБулево();
		
	ИначеЕсли ЭтоСистемноеПеречисление(Тип) Тогда
		
		Значение = СлучайноЗначениеСистемногоПеречисления(Тип);
	Иначе
		
		Значение = ЮТТестовыеДанныеВызовСервера.ФикцияЗначенияБазы(Тип);
		
	КонецЕсли;
	
	Если Значение = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Создание фейковых значений для `%1` не поддерживается", ОписаниеТипа);
	КонецЕсли;

	Возврат ОписаниеТипа.ПривестиЗначение(Значение);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоСистемноеПеречисление(Тип)
	
	Возврат ТипыСистемныхПеречислений().СодержитТип(Тип);
	
КонецФункции

Функция ТипыСистемныхПеречислений()
	
	Возврат Новый ОписаниеТипов(
		"ВидДвиженияБухгалтерии,
		|ВидДвиженияНакопления,
		|ВидПериодаРегистраРасчета,
		|ВидСчета,
		|ВидТочкиМаршрутаБизнесПроцесса,
		|ИспользованиеГруппИЭлементов,
		|ИспользованиеСреза,
		|ИспользованиеРежимаПроведения,
		|РежимАвтоВремя,
		|РежимЗаписиДокумента,
		|РежимПроведенияДокумента,
		|ПериодичностьАгрегатаРегистраНакопления,
		|ИспользованиеАгрегатаРегистраНакопления");
	
КонецФункции

Функция ИмяСистемногоПеречисления(Тип)
	
	Возврат Строка(Тип);
	
КонецФункции

Функция СлучайноЗначениеСистемногоПеречисления(Тип)
	
	Менеджер = ЮТОбщий.ВычислитьБезопасно(ИмяСистемногоПеречисления(Тип));
	
	Значения = Новый Массив();
	
	Для Каждого Значение Из Менеджер Цикл
		Значения.Добавить(Значение);
	КонецЦикла;
	
	Возврат ЮТТестовыеДанные.СлучайноеЗначениеИзСписка(Значения);
	
КонецФункции

#КонецОбласти
