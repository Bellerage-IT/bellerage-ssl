//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2022 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

// @strict-types

//@skip-check module-empty-method

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("ТестДолжен_ПроверитьГенерациюЗапросаЧерезМодельЗапроса")
	;
		
КонецПроцедуры

#Область События

Процедура ПередВсемиТестами() Экспорт
	
КонецПроцедуры

Процедура ПередКаждымТестом() Экспорт
	
КонецПроцедуры

Процедура ПослеКаждогоТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеВсехТестов() Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ТестДолжен_ПроверитьГенерациюЗапросаЧерезМодельЗапроса() Экспорт
	Модель = бф_МодельЗапроса.МодельЗапроса();
	Модель.ЗапросПакета("Тестовый")
	.Выбрать()
		.Источник("РегистрСведений.тест_РегистрДляПагинации", "Т1")
		.Источник("Справочник.тест_Справочник", "Т2")
		.ЛевоеСоединение("Т1", "Т2").Связь("Справочник = Ссылка")
			.Поле("Т1.Ключ", "Ключ")
			.Поле("Т1.Значение", "Значение")
			.Поле("Т1.ДатаУстановки", "ДатаУстановки")
			.Поле("Т1.Автор", "Автор")
		.Порядок("Т1.Автор").Автопорядок();
		
	ТекстЗапроса = Модель.ПолучитьТекстЗапроса();
	
	ЮТест.ОжидаетЧто(ТекстЗапроса).Равно(ЭталонТекстЗапроса());

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭталонТекстЗапроса()
	Возврат
	"ВЫБРАТЬ
	|	Т1.Ключ КАК Ключ,
	|	Т1.Значение КАК Значение,
	|	Т1.ДатаУстановки КАК ДатаУстановки,
	|	Т1.Автор КАК Автор
	|ИЗ
	|	РегистрСведений.тест_РегистрДляПагинации КАК Т1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.тест_Справочник КАК Т2
	|		ПО (Т1.Справочник = Т2.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т1.Автор
	|АВТОУПОРЯДОЧИВАНИЕ";
КонецФункции
#КонецОбласти
