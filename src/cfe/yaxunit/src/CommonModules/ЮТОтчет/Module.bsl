//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// СформироватьОтчет
//  Формирует отчет о результатах тестирования по заданным параметрам
// Параметры:
//  РезультатВыполнения - Массив - Коллекция результатов выполнения, каждый элемент - структура, см. ЮТФабрика.ОписаниеИсполняемогоНабораТестов
//  ПараметрыЗапуска - Структура - Параметры запуска, см. ЮТФабрика.ПараметрыЗапуска
//  Обработчик - ОписаниеОповещения
Процедура СформироватьОтчет(РезультатВыполнения, ПараметрыЗапуска, Обработчик) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗапуска.reportPath) Тогда
		ВызватьИсключение "Не указан путь сохранения отчета";
	КонецЕсли;
	
	МодульОтчета = МодульФормирования(ПараметрыЗапуска.reportFormat);
	
	Если МодульОтчета = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Отчет в формате %1 не поддерживается", ПараметрыЗапуска.reportFormat);
	КонецЕсли;
	
	ПараметрыФормирования = Новый Структура("РезультатВыполнения, ПараметрыЗапуска, Обработчик", РезультатВыполнения, ПараметрыЗапуска, Обработчик);
	ПараметрыФормирования.Вставить("МодульОтчета", МодульОтчета);
	
	ОбработчикПолученияИмениФайла = Новый ОписаниеОповещения("ПослеФормированияИмениФайла", ЭтотОбъект, ПараметрыФормирования);
	ИмяФайлаОтчета(ПараметрыФормирования, ОбработчикПолученияИмениФайла);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИмяФайлаОтчета(ПараметрыФормирования, Обработчик)
	
	ПараметрыПроверки = Новый Структура("ПараметрыФормирования, Обработчик", ПараметрыФормирования, Обработчик);
	
	ОбработчикПроверки = Новый ОписаниеОповещения("ПослеПроверкиКаталога", ЭтотОбъект, ПараметрыПроверки);
	ЮТФайлы.ЭтоКаталог(ПараметрыФормирования.ПараметрыЗапуска.reportPath, ОбработчикПроверки);
	
КонецПроцедуры

Функция МодульФормирования(Формат)
	
	Модули = ЮТРасширения.ГенераторыОтчетов();
	МодульОтчета = Неопределено;
	
	Для Каждого Модуль Из Модули Цикл
		
		Если Модуль.РеализуетФормат(Формат) Тогда
			МодульОтчета = Модуль;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МодульОтчета;
	
КонецФункции

Процедура ПослеФормированияИмениФайла(ИмяФайлаОтчета, Параметры) Экспорт
	
	ДанныеОтчета = Параметры.МодульОтчета.ДанныеОтчета(Параметры.РезультатВыполнения);
	
	Если ДанныеОтчета = Неопределено Тогда
		ВызватьИсключение "Не удалось получить данные отчета";
	Иначе
		ДанныеОтчета.Записать(ИмяФайлаОтчета);
	КонецЕсли;
	
	ЮТИсполнительКлиент.ВызватьОбработчик(Параметры.Обработчик);
	
КонецПроцедуры

Процедура ПослеПроверкиКаталога(ЭтоКаталог, Параметры) Экспорт
	
	ПутьКОтчету = Параметры.ПараметрыФормирования.ПараметрыЗапуска.reportPath;
	Если ЭтоКаталог Тогда
		ИмяФайла = ЮТФайлы.ОбъединитьПути(ПутьКОтчету, Параметры.ПараметрыФормирования.МодульОтчета.ИмяФайлаПоУмолчанию());
	Иначе
		ИмяФайла = ПутьКОтчету;
	КонецЕсли;
	
	ЮТИсполнительКлиент.ВызватьОбработчик(Параметры.Обработчик, ИмяФайла);
	
КонецПроцедуры

#КонецОбласти
