//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2022 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 
#Область ПрограммныйИнтерфейс

// СформироватьОтчет
//  Формирует отчет о результатах тестирования по заданным параметрам
// Параметры:
//  РезультатВыполнения - Массив - Коллекция результатов выполнения, каждый элемент - структура, см. ЮТФабрика.ОписаниеИсполняемогоНабораТестов
//  ПараметрыЗапуска - Структура - Параметры запуска, см. ЮТФабрика.ПараметрыЗапуска
Процедура СформироватьОтчет(РезультатВыполнения, ПараметрыЗапуска) Экспорт
	
	Модули = ЮТРасширения.ГенераторыОтчетов();
	МодульОтчета = Неопределено;
	
	Для Каждого Модуль Из Модули Цикл
		
		Если Модуль.РеализуетФормат(ПараметрыЗапуска.reportFormat) Тогда
			МодульОтчета = Модуль;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МодульОтчета = Неопределено Тогда
		
		ВызватьИсключение СтрШаблон("Отчет в формате %1 не поддерживается", ПараметрыЗапуска.reportFormat);
		
	КонецЕсли;
	
	ИмяФайлаОтчета = ИмяФайлаОтчета(Модуль, ПараметрыЗапуска);
	ДанныеОтчета = Модуль.ДанныеОтчета(РезультатВыполнения);
	
	Если ДанныеОтчета = Неопределено Тогда
		
		ВызватьИсключение "Не удалось получить данные отчета";
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ИмяФайлаОтчета) Тогда
		
		ВызватьИсключение "Не удалось сформировать имя файла отчета";
		
	Иначе
		
		ДанныеОтчета.Записать(ИмяФайлаОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции для служебного использования внутри подсистемы
///////////////////////////////////////////////////////////////////////////////// 

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

/////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции, составляющие внутреннюю реализацию модуля 
///////////////////////////////////////////////////////////////////////////////// 

#Область СлужебныеПроцедурыИФункции

Функция ИмяФайлаОтчета(Модуль, ПараметрыЗапуска)
	
	ИмяФайла = Неопределено;
	
	ПутьКОтчету = ПараметрыЗапуска.reportPath;
	
	Если НЕ ЗначениеЗаполнено(ПутьКОтчету) Тогда
		ВызватьИсключение "Не указан путь сохранения отчета";
	КонецЕсли;
	
	Если ЮТОбщий.ЭтоКаталог(ПутьКОтчету) Тогда
		ИмяФайла = ЮТОбщий.ОбъединитьПути(ПутьКОтчету, Модуль.ИмяФайлаПоУмолчанию());
	Иначе
		ИмяФайла = ПутьКОтчету;
	КонецЕсли;
	
	Возврат ИмяФайла;
	
КонецФункции

#КонецОбласти
