//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Если Сервер Тогда

#Область ОписаниеПеременных

//@skip-check object-module-export-variable
Перем HTTPМетод Экспорт;
//@skip-check object-module-export-variable
Перем БазовыйURL Экспорт;
//@skip-check object-module-export-variable
Перем Заголовки Экспорт;
//@skip-check object-module-export-variable
Перем ОтносительныйURL Экспорт;
//@skip-check object-module-export-variable
Перем ПараметрыURL Экспорт;
//@skip-check object-module-export-variable
Перем ПараметрыЗапроса Экспорт;

Перем Тело;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Возвращает тело как двоичные данные.
// 
// Возвращаемое значение:
//  ДвоичныеДанные - Тело
Функция ПолучитьТелоКакДвоичныеДанные() Экспорт
	
	ТипТела = ТипЗнч(Тело);
	
	Если Тело = Неопределено Тогда
		Возврат ПолучитьДвоичныеДанныеИзBase64Строки("");
	ИначеЕсли ТипТела = Тип("ДвоичныеДанные") Тогда
		Возврат Тело;
	ИначеЕсли ТипТела = Тип("Строка") Тогда
		Возврат ПолучитьДвоичныеДанныеИзСтроки(Тело);
	КонецЕсли;
	
КонецФункции

// Возвращает тело как поток.
// 
// Возвращаемое значение:
//  Поток - Тело
Функция ПолучитьТелоКакПоток() Экспорт
	
	Возврат ПолучитьТелоКакДвоичныеДанные().ОткрытьПотокДляЧтения();
	
КонецФункции

// Возвращает тело как строку.
// 
// Параметры:
//  Кодировка - КодировкаТекста, Строка - Кодировка
// 
// Возвращаемое значение:
//  Строка - Тело
Функция ПолучитьТелоКакСтроку(Кодировка = Неопределено) Экспорт
	
	ТипТела = ТипЗнч(Тело);
	
	Если Тело = Неопределено Тогда
		Возврат "";
	ИначеЕсли ТипТела = Тип("ДвоичныеДанные") Тогда
		Возврат ПолучитьСтрокуИзДвоичныхДанных(Тело, Кодировка);
	ИначеЕсли ТипТела = Тип("Строка") Тогда
		Возврат Тело;
	КонецЕсли;
	
КонецФункции

// Устанавливает тело как двоичные данные.
// При получении тела в другом формате происходит конвертация
// 
// Параметры:
//  Данные - ДвоичныеДанные
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция УстановитьТелоКакДвоичныеДанные(Данные) Экспорт
	
	Тело = Данные;
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает тело как строку.
// При получении тела в другом формате происходит конвертация
// 
// Параметры:
//  Строка - Строка
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция УстановитьТелоКакСтроку(Строка) Экспорт
	
	Тело = Строка;
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает тело как строку JSON.
// Сериализует переданный объект в строку JSON и сохраняет в тело
// При получении тела в другом формате происходит конвертация
// 
// Параметры:
//  Данные - Произвольный
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция УстановитьТелоКакСтрокуJSON(Данные) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	
	Тело = ЗаписьJSON.Закрыть();
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет заголовок.
// 
// Параметры:
//  ИмяЗаголовка - Строка
//  Значение - Строка
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция ДобавитьЗаголовок(ИмяЗаголовка, Значение) Экспорт
	
	Заголовки.Вставить(ИмяЗаголовка, Значение);
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет параметр запроса.
// 
// Параметры:
//  ИмяПараметра - Строка
//  Значение - Строка
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция ДобавитьПараметрЗапроса(ИмяПараметра, Значение) Экспорт
	
	ПараметрыЗапроса.Вставить(ИмяПараметра, Значение);
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет параметр URL.
// 
// Параметры:
//  ИмяПараметра - Строка
//  Значение - Строка
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция ДобавитьПараметрURL(ИмяПараметра, Значение) Экспорт
	
	ПараметрыURL.Вставить(ИмяПараметра, Значение);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает HTTP метод
// 
// Параметры:
//  Значение - Строка - Имя http метода
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция Метод(Значение) Экспорт
	
	HTTPМетод = Значение;
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает базовый URL.
// 
// Параметры:
//  Значение - Строка - базовый URL
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция БазовыйURL(Значение) Экспорт
	
	БазовыйURL = Значение;
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает относительный URL.
// 
// Параметры:
//  Значение - Строка - относительный URL
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТHTTPСервисЗапрос - Мок
Функция ОтносительныйURL(Значение) Экспорт
	
	ОтносительныйURL = Значение;
	Возврат ЭтотОбъект;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Инициализировать()
	
	HTTPМетод = "GET";
	БазовыйURL = "";
	Заголовки = Новый Соответствие();
	ОтносительныйURL = "";
	ПараметрыURL = Новый Соответствие();
	ПараметрыЗапроса = Новый Соответствие();
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

Инициализировать();

#КонецОбласти

#КонецЕсли
