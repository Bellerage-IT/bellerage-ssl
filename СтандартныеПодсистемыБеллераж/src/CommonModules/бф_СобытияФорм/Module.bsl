// BSLLS:UnusedLocalMethod-off
// @skip-check module-unused-method
// @skip-check module-empty-method
////////////////////////////////////////////////////////////////////////////////
// Содержит события форм, вызываемые на сервере
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ					- Булево - признак отказа от создания формы.
//  СтандартнаяОбработка	- Булево - признак выполнения стандартной (системной) обработки события
//  ДополнительныеПараметры	- Структура - дополнительные параметры.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка, ДополнительныеПараметры = Неопределено) Экспорт

	ИмяПроцедуры = "ПриСозданииНаСервере_" + СтрЗаменить(СтрЗаменить(Форма.ИмяФормы, ".Форма.", "_"), ".", "_");

	Попытка		
		//@skip-check server-execution-safe-mode
		Выполнить ИмяПроцедуры + "(Форма, Отказ, СтандартнаяОбработка, ДополнительныеПараметры)";
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Если Найти(ТекстОшибки, ИмяПроцедуры) = 0 Тогда
			ВызватьИсключение СтрШаблон("Ошибка при вызове обработчика %1:|%2", ИмяПроцедуры, ТекстОшибки);
		КонецЕсли;
	КонецПопытки;

КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//	Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//	ТекущийОбъект			- ДанныеФормыСтруктура - объект, который будет прочитан.
//	ДополнительныеПараметры - Структура - дополнительные параметры.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект, ДополнительныеПараметры = Неопределено) Экспорт
	
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//	Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//	ТекущийОбъект			- ДанныеФормыСтруктура - записываемый объект.
//	ПараметрыЗаписи			- Структура - дополнительные параметры записи.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//	Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//	Отказ					- Булево - флаг отказа от записи
//	ТекущийОбъект			- ДанныеФормыСтруктура - записываемый объект.
//	ПараметрыЗаписи			- Структура - дополнительные параметры записи.
//
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	ИмяПроцедуры = "ПередЗаписьюНаСервере_" + СтрЗаменить(СтрЗаменить(Форма.ИмяФормы, ".Форма.", "_"), ".", "_");

	Попытка		
		//@skip-check server-execution-safe-mode
		Выполнить ИмяПроцедуры + "(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)";
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Если Найти(ТекстОшибки, ИмяПроцедуры) = 0 Тогда
			ВызватьИсключение СтрШаблон("Ошибка при вызове обработчика %1:|%2", ИмяПроцедуры, ТекстОшибки);
		КонецЕсли;
	КонецПопытки;
КонецПроцедуры

Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, ДополнительныеПараметры = Неопределено) Экспорт

	ИмяПроцедуры = "ОбработкаОповещения_" + СтрЗаменить(СтрЗаменить(Форма.ИмяФормы, ".Форма.", "_"), ".", "_");

	Попытка
		//@skip-check server-execution-safe-mode
		Выполнить ИмяПроцедуры + "(Форма, ИмяСобытия, Параметр, ДополнительныеПараметры)";
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Если Найти(ТекстОшибки, ИмяПроцедуры) = 0 Тогда
			ВызватьИсключение СтрШаблон("Ошибка при вызове обработчика %1:|%2", ИмяПроцедуры, ТекстОшибки);
		КонецЕсли;
	КонецПопытки;	
	
КонецПроцедуры

#Область СобытияЭлементовФорм

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении".
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры = Неопределено) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытийФорм

// имена обработчиков имеют вид <ИмяСобытия>_<ВидМетаданных>_<ИмяОбъекта>_<ИмяФормы>, например
// Процедура ПриСозданииНаСервере_Документ_СверкаВзаиморасчетов_ФормаДокумента(Форма)
// КонецПроцедуры

#Область Справочники

// При создании на сервере справочник пользователи форма элемента.
// 
// Параметры:
//  Форма - см. Справочник.Пример.Форма.ФормаЭлемента
//  Отказ - Булево
//  СтандартнаяОбработка - Булево
//  ДополнительныеПараметры - Структура,Неопределено - Дополнительные параметры
Процедура ПриСозданииНаСервере_Справочник_Примеры_ФормаЭлемента(Форма, Отказ, СтандартнаяОбработка, ДополнительныеПараметры = Неопределено)
		
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Вспомогательные

#КонецОбласти

#КонецОбласти
